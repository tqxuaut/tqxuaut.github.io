<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eve的算法博客</title>
    <link>https://tqxuaut.github.io/</link>
    <description>Recent content on Eve的算法博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Aug 2019 23:53:25 +0800</lastBuildDate>
    
	<atom:link href="https://tqxuaut.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git学习笔记</title>
      <link>https://tqxuaut.github.io/gitnotes/</link>
      <pubDate>Wed, 28 Aug 2019 23:53:25 +0800</pubDate>
      
      <guid>https://tqxuaut.github.io/gitnotes/</guid>
      <description>git学习笔记 基本操作  创建版本库 git init
 将文件添加到仓库 git add 文件名 将文件修改添加到暂存区（stage） git add -all 提交所有已经修改的文件
  git commit -m &amp;quot;提交的说明&amp;quot; 将暂存区的所有内容提交到当前分支 注：可以多次add然后再一次commit，一旦提交后，如果未对工作区做任何修改，那么工作 区就是“clean”的，暂存区是空的。
版本处理  查看仓库当前状态 git satus
 查看修改内容 git diff
  eg：git diff HEAD --readme.txt 查看工作区和版本库里面最新版本的不同
 查看修改日志 git log
 版本往返 git reset --hard commit_id 在版本历史之间穿梭
   HEAD代表当前版本 HEAD^上一个版本 HEAD^^上上一个版本 以此类推
HEAD~100回退到100个版本以前
 git log 查看提交历史 git reflog 查看命令历史
 撤销修改git checkout &amp;ndash;file  （1）git checkout -- file 将文件回到最近一次git commit 或git add时的状态</description>
    </item>
    
  </channel>
</rss>